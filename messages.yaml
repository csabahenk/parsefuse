## this YAML is almost JSON just there are comments
## strip them before feeding to a JSON parser

{
    "R": {
        "FUSE_ACCESS":        ["fuse_access_in"],
        # this was pre-7.12
        # "FUSE_CREATE":        ["fuse_open_in", "string"],
        "FUSE_CREATE":        ["fuse_create_in", "string"],
        "FUSE_FLUSH":         ["fuse_flush_in"],
        "FUSE_FORGET":        ["fuse_forget_in"],
        # informal description:
        # "FUSE_BATCH_FORGET":  ["fuse_batch_forget_in", "fuse_forget_one", ...],
        "FUSE_BATCH_FORGET":  false,
        "FUSE_FSYNCDIR":      ["fuse_fsync_in"],
        "FUSE_FSYNC":         ["fuse_fsync_in"],
        # this was pre-7.9
        # "FUSE_GETATTR":       [],
        "FUSE_GETATTR":       ["fuse_getattr_in"],
        "FUSE_GETLK":         ["fuse_lk_in"],
        "FUSE_GETXATTR":      ["fuse_getxattr_in", "string"],
        "FUSE_IOCTL":         ["fuse_ioctl_in", "buf"],
        "FUSE_INIT":          ["fuse_init_in"],
        "FUSE_LINK":          ["fuse_link_in", "string"],
        "FUSE_LISTXATTR":     ["fuse_getxattr_in"],
        "FUSE_LOOKUP":        ["string"],
        "FUSE_MKDIR":         ["fuse_mkdir_in", "string"],
        "FUSE_MKNOD":         ["fuse_mknod_in", "string"],
        "FUSE_OPENDIR":       ["fuse_open_in"],
        "FUSE_OPEN":          ["fuse_open_in"],
        "FUSE_READDIR":       ["fuse_read_in"],
        "FUSE_READDIRPLUS":   ["fuse_read_in"],
        "FUSE_READ":          ["fuse_read_in"],
        "FUSE_READLINK":      [],
        "FUSE_RELEASEDIR":    ["fuse_release_in"],
        "FUSE_RELEASE":       ["fuse_release_in"],
        "FUSE_REMOVEXATTR":   ["string"],
        "FUSE_RENAME":        ["fuse_rename_in", "string", "string"],
        "FUSE_RMDIR":         ["string"],
        "FUSE_SETATTR":       ["fuse_setattr_in"],
        "FUSE_SETLK":         ["fuse_lk_in"],
        "FUSE_SETLKW":        ["fuse_lk_in"],
        "FUSE_SETXATTR":      ["fuse_setxattr_in", "string", "buf"],
        "FUSE_STATFS":        [],
        "FUSE_SYMLINK":       ["string"],
        "FUSE_UNLINK":        ["string"],
        "FUSE_WRITE":         ["fuse_write_in", "buf"],
        "FUSE_INTERRUPT":     ["fuse_interrupt_in"],
        "CUSE_INIT":          ["cuse_init_in"]
    },
    "W": {
        "FUSE_ACCESS":        [],
        "FUSE_CREATE":        ["fuse_entry_out", "fuse_open_out"],
        "FUSE_FLUSH":         [],
        "FUSE_FORGET":        null,
        "FUSE_BATCH_FORGET":  null,
        "FUSE_FSYNC":         [],
        "FUSE_FSYNCDIR":      [],
        "FUSE_GETATTR":       ["fuse_attr_out"],
        "FUSE_GETLK":         ["fuse_lk_out"],
        "FUSE_GETXATTR":      ["buf"],
        # can come with payload also in this form:
        # "FUSE_GETXATTR":      ["fuse_getxattr_out"],
        # for which we use a special handler
        "FUSE_IOCTL":         ["fuse_ioctl_out", "buf"],
        "FUSE_INIT":          ["fuse_init_out"],
        "FUSE_LINK":          ["fuse_entry_out"],
        # can come with payload in both forms:
        # "FUSE_LISTXATTR":     ["fuse_getxattr_out"],
        # "FUSE_LISTXATTR":     ["string", ...],
        # so we need a special handler to recognize and parse
        "FUSE_LISTXATTR":     false,
        "FUSE_LOOKUP":        ["fuse_entry_out"],
        "FUSE_MKDIR":         ["fuse_entry_out"],
        "FUSE_MKNOD":         ["fuse_entry_out"],
        "FUSE_OPENDIR":       ["fuse_open_out"],
        "FUSE_OPEN":          ["fuse_open_out"],
        "FUSE_READ":          ["buf"],
        # informal description:
        # "FUSE_READDIR":     ["fuse_dirent", ...]
        "FUSE_READDIR":       false,
        # informal description:
        # "FUSE_READDIRPLUS": [["fuse_entry_out","fuse_dirent"], ...]
        "FUSE_READDIRPLUS":   false,
        "FUSE_READLINK":      ["buf"],
        "FUSE_RELEASE":       [],
        "FUSE_RELEASEDIR":    [],
        "FUSE_REMOVEXATTR":   [],
        "FUSE_RENAME":        [],
        "FUSE_RMDIR":         [],
        "FUSE_SETATTR":       ["fuse_attr_out"],
        "FUSE_SETLK":         [],
        "FUSE_SETLKW":        [],
        "FUSE_SETXATTR":      [],
        "FUSE_STATFS":        ["fuse_statfs_out"],
        "FUSE_SYMLINK":       ["fuse_entry_out"],
        "FUSE_UNLINK":        [],
        "FUSE_WRITE":         ["fuse_write_out"],
        # can also be like:
        # "FUSE_INTERRUPT":     null,
        # ie. response is optional (re-asking for interrupt with errno EAGAIN)
        "FUSE_INTERRUPT":     [],
        "FUSE_NOTIFY_POLL":   ["fuse_notify_poll_wakeup_out"],
        "FUSE_NOTIFY_INVAL_INODE": ["fuse_notify_inval_inode_out"],
        # this is not entirely correct, instead of "string" there is a
        # len-capped buf, with a trailing byte (that's discarded by
        # the kernel). We practically assume that the trailing byte is zero
        # ('till we find a fuse server that does it differently).
        "FUSE_NOTIFY_INVAL_ENTRY": ["fuse_notify_inval_entry_out", "string"],
        "FUSE_NOTIFY_STORE":  ["fuse_notify_store_out"],
        "FUSE_NOTIFY_RETRIEVE": ["fuse_notify_retrieve_out"],
        # same concern as with FUSE_NOTIFY_INVAL_ENTRY
        "FUSE_NOTIFY_DELETE": ["fuse_notify_delete_out", "string"],
        "CUSE_INIT":          ["cuse_init_out", "buf"]
    }
}
